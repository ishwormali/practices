<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:src="clr-namespace:AgileOutlook.Extensions.Tag;assembly=AgileOutlook.Extensions"
        xmlns:local="clr-namespace:TestWpfApp"
        xmlns:controls="clr-namespace:AgileOutlook.Extensions.Controls;assembly=AgileOutlook.Extensions"
        xmlns:c="clr-namespace:Cinch;assembly=Cinch.WPF"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="TestWpfApp.MainWindow"
        Title="MainWindow" Height="350" Width="525" Loaded="Window_Loaded" >
    <Window.Resources>
    	<src:Tag x:Key="TagDataSource" d:IsDataSource="True"/>
        <src:Tag x:Key="tg" TagName="CM-706"/>
        
        <local:TagTestViewModel x:Key="tagsVm"/>
        <local:DummyAutoCompleteCollector x:Key="collector"/>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">

            <WrapPanel IsItemsHost="True"/>
        </ItemsPanelTemplate>
        <DataTemplate DataType="{x:Type src:Tag}">
            <!--<TextBlock Text="{Binding TagName}"></TextBlock>-->
            <controls:EditableBox EnableAutoComplete="True" Text="{Binding TagName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AutoCompleteCollector="{StaticResource collector}"   BorderThickness="0" Background="Transparent" TextChanged="EditableBox_TextChanged">
                <controls:EditableBox.AutoCompleteItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding TagName, Mode=OneWay }" Background="Transparent" ></TextBlock>
                        
                    </DataTemplate>
                </controls:EditableBox.AutoCompleteItemTemplate>
            </controls:EditableBox>
        </DataTemplate>
        <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
            <Style.Resources>
                
                <LinearGradientBrush x:Key="BackgroundColor" EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFDCE2D6" Offset="0"/>
                    <GradientStop Color="#FFDFF5CA" Offset="1"/>
                </LinearGradientBrush>
            </Style.Resources>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Margin" Value="2,1,2,1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" CornerRadius="5" BorderThickness="1" BorderBrush="#FF87991C" Background="{StaticResource BackgroundColor}" >
                        	
                            <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" ></ColumnDefinition>
                                <ColumnDefinition Width="15"/>
                            </Grid.ColumnDefinitions>
                                
                                <ContentPresenter  x:Name="contentPresenter" 
                                                  Margin="1,1,1,2" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Grid.Column="0" Grid.ColumnSpan="1"   />
                                <controls:CrossButton Grid.Column="1" VerticalAlignment="Center" Margin="0,0,0,0" Width="12">

                                </controls:CrossButton>

                        </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#FFDCE2D6"/>
                                <Setter Property="Foreground" Value="White"/>
                                
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="IsSelected" Value="True"/>
                            </Trigger>
                            <!--<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TagBackground" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
			<GradientStop Color="#B5CDD0DC" Offset="0.056"/>
			<GradientStop Color="#E5CED2E2" Offset="0.924"/>
			<GradientStop Color="#E5CDD0DE" Offset="0.46"/>
		</LinearGradientBrush>
        <SolidColorBrush Color="#FF9C9CA9" x:Key="TagBorder">
            
        </SolidColorBrush>
    	
    </Window.Resources>
    <Grid DataContext="{Binding Source={StaticResource tagsVm}}" x:Name="MainGrid">

        <ListBox FontSize="10"  ScrollViewer.HorizontalScrollBarVisibility="Disabled" Margin="167,76,51,60"  
                 ItemsSource="{Binding Tags}" ItemContainerStyle="{StaticResource ListBoxItemStyle1}" ItemsPanel="{DynamicResource ItemsPanelTemplate1}"  />

        <controls:EditableBox   BorderThickness="1" BorderBrush="Black" Background="Yellow" 
                                DataContext="{Binding ImportantTag}"  Text="{Binding TagName, Mode=TwoWay}" Height="32" HorizontalAlignment="Left"  x:Name="editableBox1" VerticalAlignment="Top" Margin="44,25,0,0" Width="87">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="TextChanged">
                    <c:EventToCommandTrigger Command="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=DataContext.QueryTag}"></c:EventToCommandTrigger>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </controls:EditableBox>
        
        <controls:CrossButton Content="Button" Height="12" HorizontalAlignment="Left" Margin="50,143,0,0" x:Name="crossButton1" VerticalAlignment="Top" Width="13" />
        <Slider  Height="23" HorizontalAlignment="Left" Margin="44,219,0,0" Name="slider1" VerticalAlignment="Top" Width="100" />
        <Button Content="Button" Height="30" HorizontalAlignment="Left" Margin="148,271,0,0" Name="button1" VerticalAlignment="Top" Width="78" Click="button1_Click" />
    </Grid>
</Window>


<!--<Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
    <Setter Property="Background" Value="{StaticResource TagBackground}"/>
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Padding" Value="2,0,0,0"/>
    <Setter Property="BorderBrush" Value="{StaticResource TagBorder}" />
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                <ControlTemplate.Resources>
                    <Storyboard x:Key="OnMouseDoubleClick1" AutoReverse="True">

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentPresenter">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBox">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>

                    </Storyboard>
                    <Storyboard x:Key="Storyboard2">
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentPresenter">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBox">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </ControlTemplate.Resources>
                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="5" Margin="2">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="VisualStateGroup">
                            <VisualStateGroup.Transitions>
                                <VisualTransition GeneratedDuration="0" To="Editing">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualTransition>
                                <VisualTransition From="Editing" GeneratedDuration="0">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualTransition>
                            </VisualStateGroup.Transitions>
                            <VisualState x:Name="Editing"/>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid>
                        <ContentPresenter x:Name="contentPresenter" Margin="2,2,2,2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <TextBox x:Name="textBox" Visibility="Hidden" Text="{Binding TagName}" Margin="2,2,2,2" >
                            <Control.Triggers>
                                <EventTrigger RoutedEvent="FocusManager.LostFocus">
                                    <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                                </EventTrigger>
                            </Control.Triggers>
                        </TextBox>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>



                    <EventTrigger RoutedEvent="Control.MouseDoubleClick"  >

                        <BeginStoryboard x:Name="OnMouseDoubleClick1_BeginStoryboard1" Storyboard="{StaticResource OnMouseDoubleClick1}"  />
                    </EventTrigger>
                    <Trigger Property="IsSelected" Value="true">
                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsSelected" Value="true"/>
                            <Condition Property="Selector.IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </MultiTrigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </Trigger>

                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>-->

<!--<src:TagCollection x:Key="tags">
    <src:Tag TagName="CM-1401"/>
    <src:Tag TagName="CM-967"/>
    <src:Tag TagName="CM-2221"/>
    <src:Tag TagName="CM-706"/>
    <src:Tag TagName="{x:Null}"/>
</src:TagCollection>-->