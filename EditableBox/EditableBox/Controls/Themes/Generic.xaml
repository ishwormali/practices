<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:EditableBox.Controls">

    <Style TargetType="{x:Type local:EditableBox}">
        <Setter Property="CornerRadius" Value="0,0,0,0" />
        <Setter Property="Padding" Value="5,5,5,5" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:EditableBox}">

                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" >
                    <Grid>
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <TextBlock Text="{TemplateBinding Text}" x:Name="PART_Display" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ></TextBlock>
                            <Popup x:Name="PART_AutoCompletePopup" IsOpen="{TemplateBinding IsPopupOpen}">
                                <ListBox x:Name="PART_AutoCompleteList" ItemTemplate="{TemplateBinding AutoCompleteItemTemplate}" >
                                    <ListBox.ItemContainerStyle>
                                        <Style  TargetType="{x:Type ListBoxItem}">
                                            <Style.Resources>

                                                <LinearGradientBrush x:Key="BackgroundColor" EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FFDCE2D6" Offset="0"/>
                                                    <GradientStop Color="#FFDFF5CA" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Style.Resources>
                                            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                            <Setter Property="Padding" Value="2,0,0,0"/>
                                            <Setter Property="Margin" Value="2,1,2,1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Border x:Name="Bd" CornerRadius="5" BorderThickness="1" BorderBrush="#FF87991C" Background="{StaticResource BackgroundColor}" >

                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*" ></ColumnDefinition>
                                                                    <ColumnDefinition Width="15"/>
                                                                </Grid.ColumnDefinitions>

                                                                <ContentPresenter  x:Name="contentPresenter" 
                                                  Margin="1,1,1,2" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Grid.Column="0" Grid.ColumnSpan="1"   />
                                                                

                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsSelected" Value="true">
                                                                <Setter Property="Background" TargetName="Bd" Value="#FFDFF5CA"/>
                                                                <Setter Property="Foreground" Value="Green"/>

                                                            </Trigger>
                                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                <Setter Property="IsSelected" Value="True"/>
                                                            </Trigger>
                                                            
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                </ListBox>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditing" Value="true">
                            <Setter TargetName="PART_ContentHost" Property="Visibility" Value="{x:Static Visibility.Visible}"></Setter>
                            <Setter TargetName="PART_Display" Property="Visibility" Value="{x:Static Visibility.Hidden}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEditing" Value="false">
                            <Setter TargetName="PART_ContentHost" Property="Visibility" Value="{x:Static Visibility.Hidden}"></Setter>
                            <Setter TargetName="PART_Display" Property="Visibility" Value="{x:Static Visibility.Visible}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                
            </Setter.Value>
            
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CrossButton}">
        <Style.Resources>
            <!--<SolidColorBrush x:Key="NormalBackgroundBrush" Color="#00000000" />
            <SolidColorBrush x:Key="NormalBorderBrush" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="NormalForegroundBrush" Color="#FF8f949b" />-->
            <SolidColorBrush x:Key="NormalBackgroundBrush" Color="#FFc13535" />
            <!--<SolidColorBrush x:Key="NormalBorderBrush" Color="#FFFFFFFF" />-->
            <SolidColorBrush x:Key="NormalForegroundBrush" Color="#FFf9ebeb" />
            
            <SolidColorBrush x:Key="HoverBackgroundBrush" Color="#FFD25454" />
            <SolidColorBrush x:Key="HoverForegroundBrush" Color="#FFf9ebeb" />

            <SolidColorBrush x:Key="PressedBackgroundBrush" Color="#FF431e20" />
            <SolidColorBrush x:Key="PressedBorderBrush" Color="#FF110033" />
            <SolidColorBrush x:Key="PressedForegroundBrush" Color="#FFf9ebeb" />
        </Style.Resources>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Focusable" Value="False" />
       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CrossButton}">
                    <Grid Background="Transparent">

                        <!-- The background of the button, as an ellipse. -->
                        <Ellipse x:Name="backgroundEllipse" Fill="{StaticResource NormalBackgroundBrush}"  />

                        <!-- A path that renders a cross. -->
                        <Path x:Name="ButtonPath"
      Margin="3"
      Stroke="{StaticResource NormalForegroundBrush}"
      StrokeThickness="1.5"
      StrokeStartLineCap="Square"
      StrokeEndLineCap="Square"
      Stretch="Uniform"
      VerticalAlignment="Center"
      HorizontalAlignment="Center">
                            <Path.Data>
                                <PathGeometry>
                                    <PathGeometry.Figures>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="25,25"/>
                                        </PathFigure>
                                        <PathFigure StartPoint="0,25">
                                            <LineSegment Point="25,0"/>
                                        </PathFigure>
                                    </PathGeometry.Figures>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="backgroundEllipse" Property="Fill"
                Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter TargetName="ButtonPath" Property="Stroke" 
                Value="{StaticResource HoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{StaticResource PressedBackgroundBrush}" />
                            <Setter TargetName="backgroundEllipse" Property="Stroke"
                                    Value="{StaticResource PressedBorderBrush}" />
                            <Setter TargetName="ButtonPath" Property="Stroke" 
                                    Value="{StaticResource PressedForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>
</ResourceDictionary>
